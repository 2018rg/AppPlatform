<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.webApp.dao.IRoleDao">
	<resultMap id="RoleMap" type="com.cn.webApp.model.Role">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="ROLENAME" property="rolename" jdbcType="VARCHAR" />
		<result column="CUSTOMERUNITCODE" property="customerunitcode"
			jdbcType="VARCHAR" />
		<result column="ROLESTATE" property="rolestate" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Role_List">
		ID, ROLENAME, CUSTOMERUNITCODE, ROLESTATE
	</sql>
	<select id="selectByPrimaryKey" resultMap="RoleMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Role_List" />
		from base_role
		where ID = #{id,jdbcType=VARCHAR}
	</select>

	<select id="selectBySelective" resultMap="RoleMap"
		parameterType="com.cn.webApp.model.Role" resultType="list">
		select
		<include refid="Base_Role_List" />
		from base_role
		<where>
			<if test="customerunitcode != null">
				CUSTOMERUNITCODE = #{customerunitcode,jdbcType=VARCHAR}
			</if>
			<if test="rolename != null">
			and	ROLENAME = #{rolename,jdbcType=VARCHAR}
			</if>
			<if test="rolestate != null">
			and	ROLESTATE = #{rolestate,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="queryRolesCounts" parameterType="com.cn.webApp.model.Role"
		resultType="long">
		select count(*) from base_role
		<where>
			<if test="customerunitcode != null">
				CUSTOMERUNITCODE = #{customerunitcode,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<select id="queryPageRoles" resultMap="RoleMap" parameterType="map"
		resultType="list">
		select
		<include refid="Base_Role_List" />
		from base_role
		<where>
			<if test="customerunitcode != null">
				CUSTOMERUNITCODE = #{customerunitcode,jdbcType=VARCHAR}
			</if>
		</where>
		order by ${orderName} ${descAsc}
		<if test="startIndex != null and startIndex != ''">
			limit ${startIndex},
		</if>
		<if test="startIndex == null or startIndex == ''">
			limit 0,
		</if>
		<if test="endIndex != null and endIndex != ''">
			${endIndex}
		</if>
	</select>

	<select id="queryRoleByCustomerCode" resultMap="RoleMap"
		parameterType="java.lang.String" resultType="list">
		select
		<include refid="Base_Role_List" />
		from BASE_ROLE t where t.rolestate=1 and t.customerunitcode =
		#{customerunitcode,jdbcType=VARCHAR} order by t.rolename
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		base_role
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.cn.webApp.model.Role">
		insert into base_role (ID,
		ROLENAME, CUSTOMERUNITCODE,
		ROLESTATE)
		values (#{id,jdbcType=VARCHAR},
		#{rolename,jdbcType=VARCHAR},
		#{customerunitcode,jdbcType=VARCHAR},
		#{rolestate,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.cn.webApp.model.Role">
		insert into base_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="rolename != null">
				ROLENAME,
			</if>
			<if test="customerunitcode != null">
				CUSTOMERUNITCODE,
			</if>
			<if test="rolestate != null">
				ROLESTATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="rolename != null">
				#{rolename,jdbcType=VARCHAR},
			</if>
			<if test="customerunitcode != null">
				#{customerunitcode,jdbcType=VARCHAR},
			</if>
			<if test="rolestate != null">
				#{rolestate,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cn.webApp.model.Role">
		update base_role
		<set>
			<if test="rolename != null">
				ROLENAME = #{rolename,jdbcType=VARCHAR},
			</if>
			<if test="customerunitcode != null">
				CUSTOMERUNITCODE = #{customerunitcode,jdbcType=VARCHAR},
			</if>
			<if test="rolestate != null">
				ROLESTATE = #{rolestate,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cn.webApp.model.Role">
		update base_role
		set ROLENAME = #{rolename,jdbcType=VARCHAR},
		CUSTOMERUNITCODE =
		#{customerunitcode,jdbcType=VARCHAR},
		ROLESTATE =
		#{rolestate,jdbcType=INTEGER}
		where ID = #{id,jdbcType=VARCHAR}
	</update>
</mapper>